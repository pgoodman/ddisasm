//===- debug_stats.dl -----------------------------------------*- datalog -*-===//
//
//  Copyright (C) 2019 GrammaTech, Inc.
//
//  This code is licensed under the GNU Affero General Public License
//  as published by the Free Software Foundation, either version 3 of
//  the License, or (at your option) any later version. See the
//  LICENSE.txt file in the project root for license terms or visit
//  https://www.gnu.org/licenses/agpl.txt.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU Affero General Public License for more details.
//
//  This project is sponsored by the Office of Naval Research, One Liberty
//  Center, 875 N. Randolph Street, Arlington, VA 22203 under contract #
//  N68335-17-C-0700.  The content of the information does not necessarily
//  reflect the position or policy of the Government and no official
//  endorsement should be inferred.
//
//===----------------------------------------------------------------------===//

// Predicates for debugging and statistics
.decl discarded_aligned_pointer(ea:address)
.output discarded_aligned_pointer

.decl discarded_aligned_pointer_to_text(ea:address)
.output discarded_aligned_pointer_to_text

.decl unaligned_pointer(ea:address)
.output unaligned_pointer

discarded_aligned_pointer_to_text(EA):-
    address_in_data(EA,_),
    !address_in_data_refined(EA,_),
    arch.pointer_size(Pt_size),
    EA % Pt_size = 0.

discarded_aligned_pointer(EA):-
    discarded_data_object(EA,Pt_size,"symbol"),
    EA % Pt_size = 0.

unaligned_pointer(EA):-
    data_object(EA,Pt_size,"symbol"),
    EA % Pt_size != 0.

.decl immediate_symbol(ea:address,op_index:number,dest:address)
.output immediate_symbol

immediate_symbol(EA,Op_index,Dest):-
    code(EA),
    may_have_symbolic_immediate(EA,Dest),
    instruction_get_op(EA,Op_index,Op),
    !direct_jump(EA,_),
    !direct_call(EA,_),
    op_immediate(Op,Dest).
